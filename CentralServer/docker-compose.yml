version: '3.3'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    restart: always
    container_name: traefik
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - --api.insecure=true # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
      - --api.dashboard=true # <== Enabling the dashboard to view services, middlewares, routers, etc...
      - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - --log.level=DEBUG # <== Setting the level of the logs from traefik
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # <== Enabling docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
      - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80 # <== Defining an entrypoint for port :80 named web
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web-secured.address=:443 # <== Defining an entrypoint for https on port :443 named web-secured
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - --certificatesresolvers.mytls.acme.email=pocaezz@gmail.com # <== Setting email for certs
      - --certificatesresolvers.mytls.acme.storage=/letsencrypt/acme.json # <== Defining acme file to store cert information
      - --certificatesresolvers.mytls.acme.tlschallenge=true # <== Enable TLS-ALPN-01 to generate and renew ACME certs
      - --certificatesresolvers.mytls.acme.httpchallenge=true # <== Enable TLS-ALPN-01 to generate and renew ACME certs
      - --certificatesresolvers.mytls.acme.httpchallenge.entryPoint=web # <== Enable TLS-ALPN-01 to generate and renew ACME certs
      # - --certificatesresolvers.mytls.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    volumes:
      - ./letsencrypt:/letsencrypt # <== Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ./dynamic.yaml:/dynamic.yaml # <== Volume for dynamic conf file, **ref: line 27
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.api.rule=Host(`monitor.localhost`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.api.service=api@internal" # <== Enabling the api to be a service to access
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=mytls"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$05$$6GYgD6w3FtmRZeenElS.a.ZHzr1wK.pglk3P5NAGt58LGq6QmYvru"
  server:
    build : .
    restart: always
    container_name: server
    labels: 
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.serverContainer.rule=PathPrefix(`/server`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.serverContainer.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.serverContainer.middlewares=redirect@file" # <== This is a middleware to redirect to https
      - "traefik.http.routers.serverContainer-secured.rule=PathPrefix(`/server`)" # <== Your Domain Name for the https rule 
      - "traefik.http.routers.serverContainer-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.serverContainer-secured.tls.certresolver=mytls" # <== Defining certsresolvers for https
      - "traefik.http.routers.serverContainer-secured.tls=true" # <== Defining certsresolvers for https


  engin1:
    build: ../enginsDonnees/.
    restart: always
    container_name: engin1
    labels: 
        #### Labels define the behavior and rules of the traefik proxy for this container ####
        - "traefik.enable=true" # <== Enable traefik to proxy this container
        - "traefik.http.routers.engin1.rule=PathPrefix(`/engin1`)" # <== Your Domain Name goes here for the http rule
        - "traefik.http.routers.engin1.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
        - "traefik.http.routers.engin1.middlewares=redirect@file" # <== This is a middleware to redirect to https
        - "traefik.http.routers.engin1-secured.rule=PathPrefix(`/engin1`)" # <== Your Domain Name for the https rule 
        - "traefik.http.routers.engin1-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
        - "traefik.http.routers.engin1-secured.tls.certresolver=mytls" # <== Defining certsresolvers for https
        - "traefik.http.routers.engin1-secured.tls=true" # <== Defining certsresolvers for https

